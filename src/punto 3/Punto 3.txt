Arboles B

- un árbol B es una estructura de datos en la que los datos se organizan en un conjunto de nodos c
onectados por enlaces. Cada nodo contiene una lista ordenada de claves y un puntero a un subárbol, 
de manera que todas las claves en el subárbol son mayores que las claves del nodo y menores que las 
claves del nodo siguiente.

El uso de un árbol B permite la búsqueda rápida y la inserción de datos en un árbol que puede contener 
una gran cantidad de elementos. Además, los árboles B son adecuados para operaciones en disco, ya que 
los nodos se pueden leer y escribir en bloques de tamaño fijo. En general, los árboles B se utilizan para 
implementar estructuras de datos que necesitan almacenar grandes cantidades de información de manera eficiente, 
como bases de datos, sistemas de archivos y sistemas de indexación.

Un árbol B debe tener los siguientes componentes:
1. Un nodo raíz.
2. Cada nodo puede tener un número variable de claves, que representan los valores que se almacenan en el árbol.
3. Los nodos internos tienen punteros a otros nodos que se llaman hijos.
4. Cada nodo, excepto la raíz y las hojas, tiene al menos t - 1 claves y t hijos, donde t es el grado mínimo del árbol.
5. Todas las hojas tienen la misma profundidad.
6. Cada nodo debe estar lleno a no ser que sea una hoja.
7. Cada clave en un nodo debe estar en orden creciente.



Aplicacion problema:

  La Universidad del Norte en la clase de ED2 necesita un sistema para almacenar y buscar información sobre sus estudiantes. 
  Cada estudiante tiene un número de identificación único, su nombre completo y su promedio académico. 
  La universidad desea poder agregar nuevos estudiantes al sistema, buscar estudiantes por su número de 
  identificación y actualizar su promedio académico en caso de que haya cambios. Se requiere implementar una solución 
  eficiente que permita manejar grandes cantidades de información y proporcionar una respuesta rápida a las consultas realizadas. 
  Se propone utilizar un árbol B para almacenar los datos de los estudiantes.


posible solucion:

1. Definir la estructura de datos para representar a un estudiante, que contenga su número de identificación, nombre y promedio académico.
2. Crear una estructura de datos para el árbol B, donde se almacenan los estudiantes. Esta estructura debe contener la raíz del árbol y el grado mínimo del mismo.
3. Implementar una función para buscar un estudiante en el árbol B a partir de su número de identificación. Para ello, se debe recorrer el árbol en busca del estudiante en cuestión y devolver su información si se encuentra, o None en caso contrario.
4. Implementar una función para insertar un estudiante en el árbol B. Si la cantidad de estudiantes en un nodo supera el máximo permitido por el grado mínimo del árbol, se debe dividir el nodo en dos y redistribuir los estudiantes en ambos nodos.
5. Implementar una función para actualizar el promedio académico de un estudiante en el árbol B. Para ello, se debe buscar al estudiante a partir de su número de identificación y actualizar su promedio si se encuentra.
