"""Se realizara un ejemplo de ejercicio donde una determinada serie de 
claves  5,10,6,9,7,13,22, se debe realizar el arbol B+ con una raiz"""

# se crea la clase del arbol
class Arbol:
  def __init__(self,v):
    self.v = v
    self.izq = None
    self.der = None

# una clase de busqueda del arbol, para saber los elementos a usar, y tener
#control sobre los valores medios en cada lista, por si se requiere
def buscar(self,data):

  if self.v != data:

    if self.izq != None:
      return self.izq.buscar(data)

    if self.der != None:
      return self.der.buscar(data)

  else:
    return self.v
# se crea una lista, para el agrergado de cada valor
nums = list()
tam = 3
# se llena la lista y se saca el elemento de la mitad del mismo
for i in range (tam):

    nums = input("Nums ")
    
    Nums.append(nums)

r= list(3)
# se llena el arbol, los numeros menores iran a la izquierda hasta que se llene
#y los mayores a la derecha, comparando acada uno de los elemento para su posicion

def ArbolB(self, data, padre):
  if (self.izq > r):
    if self.izq != None:
      self.izq.ArbolB (padre,data)
    if self.der != None:
      self.der.ArbolB (padre,data)
    else:
      self.izq = Arbol(data)
  else:
    if self.der != None:
      self.der.ArbolB (padre,data)
    if self.izq != None:
      self.izq.ArbolB (padre,data)
    else:
      self.der = Arbol(data)
